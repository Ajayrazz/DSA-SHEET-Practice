class Solution{
    // Function to swap elements in the array
    void swap(int i, int j, int arr[]){
        int tmp = arr[i];
        arr[i] = arr[j];
        arr[j] = tmp;
    }
    
    // Function to find the next lexicographically greater permutation of the given array
    List<Integer> nextPermutation(int N, int arr[]){
        // Initializing variables
        int ind = 0;
        int v[] = arr.clone();
        
        // Finding the largest index i such that arr[i] < arr[i+1]
        for(int i = N-2; i >= 0; i--){
            if(v[i] < v[i+1]){
                ind = i;
                break;
            }
        }
        
        // Swapping the element at ind with the smallest element greater than it to its right side
        for(int i = N-1; i > ind; i--){
            if(v[i] > v[ind]){
                swap(i, ind, v);
                ind++;
                break;
            }
        }
        
        // Reversing the elements from ind+1 to N-1 to get the next permutation
        for(int i = 0; i < (N-ind)/2; i++)
            swap(i + ind, N - i - 1, v);
        
        // Converting array to list and returning the next permutation
        List<Integer> li = new ArrayList<>();
        for(int x : v) 
            li.add(x);
        return li;
    }
}
